version: '3.9'

services:
  postgres:
    image: postgres:16.2
    restart: unless-stopped
    ports:
      - '${DB_PORT:-5432}:${DB_INTERNAL_PORT:-5432}'
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME}']
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 3s
  asterisk:
    image: andrius/asterisk:alpine-20.5.2
    restart: unless-stopped
    ports:
      - '8088:8088'
    volumes:
      - ./asterisk/conf/ari.conf:/etc/asterisk/ari.conf
      - ./asterisk/conf/http.conf:/etc/asterisk/http.conf
    healthcheck:
      test:
        [
          'CMD',
          'apk',
          'add',
          'curl',
          '&&',
          'curl',
          '-u',
          'username:password',
          '-f',
          'http://localhost:8088/api/v1/health',
        ]
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 3s
  callout:
    image: sptmru/asterisk-callout:latest
    restart: unless-stopped
    ports:
      - '${HTTP_PORT:-8080}:${HTTP_PORT:-8080}'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${HTTP_PORT}/api/v1/health']
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 3s
    depends_on:
      - postgres
      - asterisk
volumes:
  data: {}
